// Code generated by thunk; DO NOT EDIT.
package withmethod

type LazyWithMethod struct {
	inner WithMethod
}

func (l *LazyWithMethod) Bar(f float64, bs []byte) func() (map[string]string, error) {
	return func() (map[string]string, error) {
		return l.inner.Bar(f, bs)
	}
}

func (l *LazyWithMethod) Foo(n int) func() string {
	return func() string {
		return l.inner.Foo(n)
	}
}

func NewLazyWithMethod(inner WithMethod) *LazyWithMethod {
	return &LazyWithMethod{inner: inner}
}
